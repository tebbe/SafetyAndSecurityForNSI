@model SafetyAndSecurityForNSI.Models.HomeLoanModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

 <h4>Home Loan Entry</h4>
<div class="row">
  @Html.ValidationSummary(true, "", new { @class = "text-danger" })
   <div class="col-md-12">
      <div class="col-md-6 form-horizontal form-widget">
          <div class="form-group">
                        @Html.LabelFor(model => model.CitizenName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.CitizenName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CitizenName, "", new { @class = "text-danger" })
                        </div>
                    </div>
          <div class="form-group">
                        @Html.LabelFor(model => model.NID, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.NID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NID, "", new { @class = "text-danger" })
                        </div>
                    </div>

          <div class="form-group">
                        @Html.LabelFor(model => model.BirthId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.BirthId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BirthId, "", new { @class = "text-danger" })
                        </div>
                    </div>

          <div class="form-group">
                        @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                        </div>
                    </div>
      </div>
      <div class="col-md-6 form-horizontal form-widget">
                    <div class="col-md-6 col-sm-5 col-xs-8 divForPic" id="divForPic-0" style="margin-left:37%">
                        <span id="UserImgClose-0" style="display:none;">
                            <img src="~/Image/Blank/close_pic.png" class="previewImgClose" id="UserImgClose-0" data-count="0" />
                        </span>
                        <div id="imgPreview-0" class="imgPreview"></div>
                        <div id="imgUpload-0" class="image-uploader">
                            <input type="file" name="files" id="file-0" class="inputfile inputfile-4" data-count="0" style="display:none;" />
                            <label for="file-0" id="lbl-0" class="lblForPics">
                                <span style="font-size: 26px;padding-top:1em;display:block;" class="lbl_Span_plus">+</span>
                                <span style="font-size: 15px;font-weight:bold;">Add Photos</span>
                            </label>
                        </div>
                    </div>
                </div>
    </div>
 </div>
<div class="row">
  <div class="col-md-12" style="margin-top:50px;">
      <div class="col-md-6  form-horizontal form-widget">
          <div class="form-group">
              @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "control-label col-md-4" })
              <div class="col-md-8">
                  @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-4" })
              <div class="col-md-8">
                  @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.ParmanentAddress, htmlAttributes: new { @class = "control-label col-md-4" })
              <div class="col-md-8">
                  @Html.EditorFor(model => model.ParmanentAddress, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.ParmanentAddress, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-4" })
              <div class="col-md-8">
                  @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.PresenrAddress, htmlAttributes: new { @class = "control-label col-md-4" })
              <div class="col-md-8">
                  @Html.EditorFor(model => model.PresenrAddress, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.PresenrAddress, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.RelativeContact, htmlAttributes: new { @class = "control-label col-md-4" })
              <div class="col-md-8">
                  @Html.EditorFor(model => model.RelativeContact, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.RelativeContact, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.PassportNo, htmlAttributes: new { @class = "control-label col-md-4" })
              <div class="col-md-8">
                  @Html.EditorFor(model => model.PassportNo, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.PassportNo, "", new { @class = "text-danger" })
              </div>
          </div>
         
          <div class="form-group">
              @Html.LabelFor(model => model.PersonDetails, htmlAttributes: new { @class = "control-label col-md-4" })
              <div class="col-md-8">
                  @Html.TextAreaFor(model => model.PersonDetails, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.PersonDetails, "", new { @class = "text-danger" })
              </div>
          </div>                   
      </div>
      <div class="col-md-6 form-horizontal form-widget">
          <div class="form-group">
              @Html.LabelFor(model => model.YearlyIncome, htmlAttributes: new { @class = "control-label col-md-4" })
              <div class="col-md-8">
                  @Html.EditorFor(model => model.YearlyIncome, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.YearlyIncome, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.WorkingAddress, htmlAttributes: new { @class = "control-label col-md-4" })
              <div class="col-md-8">
                  @Html.EditorFor(model => model.WorkingAddress, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.WorkingAddress, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.FamilyMembers, htmlAttributes: new { @class = "control-label col-md-4" })
              <div class="col-md-8">
                  @Html.EditorFor(model => model.FamilyMembers, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.FamilyMembers, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
              <div class="col-md-8">
                  @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
              </div>
          </div>
          <div class="form-group">
              @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
              <div class="col-md-8">
                  @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.SSINumber, htmlAttributes: new { @class = "control-label col-md-4" })
              <div class="col-md-8">
                  @Html.EditorFor(model => model.SSINumber, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.SSINumber, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.LoanAmmount, htmlAttributes: new { @class = "control-label col-md-4" })
              <div class="col-md-8">
                  @Html.EditorFor(model => model.LoanAmmount, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.LoanAmmount, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.JobStatus, htmlAttributes: new { @class = "control-label col-md-4" })
              <div class="col-md-8">
                  @Html.EditorFor(model => model.JobStatus, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.JobStatus, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.MonthlyIncome, htmlAttributes: new { @class = "control-label col-md-4" })
              <div class="col-md-8">
                  @Html.EditorFor(model => model.MonthlyIncome, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.MonthlyIncome, "", new { @class = "text-danger" })
              </div>
          </div>      
      </div>
  </div>
</div>

<div class="form-group" style="margin-top:50px;">
    <div class="col-md-offset-4 col-md-9">
                <button class="blue" id="HomeLoanEntrySave"><i class="fa fa-save"></i>Save</button>
                <button class="yellow" id="HomeLoanEntryRefresh"><i class="fa fa-refresh"></i>Refresh</button>
                <button class="red" id="HomeLoanEntryCancel"><i class="fa fa-close"></i>Cancel</button>
            </div>
</div>
<div>
     @Html.ActionLink("Back to List", "Index")
</div>
<script>
    var allMainFile = [];
    var allFileCount = [];
    var id;
    var PictureName;
    $('#HomeLoanEntryRefresh').click(function () {
        location.reload();
    });
    $('#HomeLoanEntryCancel').click(function () {
        location.href = '@Url.Action("Index", "HomeLoan")';
    });

    $(".divForPic").on('change', '.inputfile-4', function (e) {
        id = $(this).data("count");
        var countFiles = $("#file-" + id)[0].files.length;
        var imgPath = $("#file-" + id)[0].value;
        var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
        var image_holder = $("#imgPreview-" + id);
        var files = e.target.files;
        image_holder.empty();
        if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
            if (typeof (FileReader) != "undefined") {
                allFileCount.push(id);
                allMainFile[id] = files[0];
                var reader = new FileReader();
                reader.onload = function (e) {
                    $("<img />", { "src": e.target.result }).appendTo(image_holder);
                }
                $("#imgUpload-" + id).hide();
                $("#UserImgClose-" + id).show();
                image_holder.show();
                $("#file-" + id).hide();
                $("#lblfile-" + id).hide();
                $("#PictureName").val($("#file-" + id)[0].files[0]);
                reader.readAsDataURL($("#file-" + id)[0].files[0]);
                $(".lbl_Span_plus").text("+");
                id++;
            } else {
                alert("This browser does not support FileReader.");
            }
        } else {
            alert("Pls select only images");
        }
    });

    $(".divForPic").on('click', ".previewImgClose", function (e) {
        var id = $(this).data("count");
        allMainFile[id] = "";
        $("#imgPreview-" + id).empty();
        $("#imgPreview-" + id).hide();
        $("#UserImgClose-" + id).hide();
        $("#imgUpload-" + id).show();
    });

    $("#HomeLoanEntrySave").click(function () {
        
            var sendData = new FormData();
            sendData.append("CitizenName", $("#CitizenName").val());
            sendData.append("BirthId", $("#BirthId").val());
            sendData.append("FatherName", $("#FatherName").val());
            sendData.append("MotherName", $("#MotherName").val());
            sendData.append("Age", $("#Age").val());
            sendData.append("ParmanentAddress", $("#ParmanentAddress").val());
            sendData.append("Contact", $("#Contact").val());
            sendData.append("PresenrAddress", $("#PresenrAddress").val());
            sendData.append("RelativeContact", $("#RelativeContact").val());
            sendData.append("PassportNo", $("#PassportNo").val());
            sendData.append("Email", $("#Email").val());
            sendData.append("NID", $("#NID").val());
            sendData.append("SSINumber", $("#SSINumber").val());
            sendData.append("LoanAmmount", $("#LoanAmmount").val());
            sendData.append("JobStatus", $("#JobStatus").val());
            sendData.append("MonthlyIncome", $("#MonthlyIncome").val());
            sendData.append("YearlyIncome", $("#YearlyIncome").val());
            sendData.append("WorkingAddress", $("#WorkingAddress").val());
            sendData.append("PersonDetails", $("#PersonDetails").val());
            sendData.append("FamilyMembers", $("#FamilyMembers").val());
            sendData.append("Gender", $("#Gender").val());


            for (var i = 0; i < allMainFile.length; i++) {
                sendData.append("files[" + i + "]", allMainFile[i]);
            }
            $.ajax({
                url:'@Url.Action("HomeLoanEntrySave", "HomeLoan")',
                type:'Post',
                data:sendData,
                contentType: false,
                processData: false,
                success: function (data) {
                    //notification.hide(); notification.setOptions({ autoHideAfter: 5000 });
                    if (data === "Error") {
                        alert("Failed");
                       //notification.show("Adding new citizen was unsuccessful.", "upload-error");

                    } else {
                        //notification.show( "Local Citizen info has been successfully added.", "upload-success");
                        alert("Success");
                    }
                },
                error: function (error) {
                    //notification.hide(); notification.setOptions({ autoHideAfter: 5000 });
                   // notification.show("Upload unsuccessful", "upload-warning");
                    alert("Upload Failed");
                }
            });
    });

        </script>
<style>
            .image-uploader {
                width: 200px;
                height: 200px;
                display: block;
                text-align: center;
            }

            .imgPreview {
                background-color: #e8e4d0;
                position: relative;
                width: 200px;
                height: 200px;
                border: 1px solid #808080;
                display: none;
                overflow: hidden;
                margin-bottom: 20px;
            }

                .imgPreview img {
                    position: absolute;
                    top: 0;
                    bottom: 0;
                    left: 0;
                    right: 0;
                    margin: auto;
                    display: block;
                    max-width: 90%;
                    height: auto;
                }

            .lblForPics {
                text-align: center;
                max-width: 90%;
                width: 200px;
                height: 200px;
                vertical-align: middle;
                border: 1px dashed blue;
            }

                .lblForPics span {
                    color: #083bb5 !important;
                }

            .previewImgClose {
                position: relative;
                width: 30px;
                height: 30px;
                cursor: pointer;
                float: right;
                left: -1.5em;
                bottom: 1.5em;
                z-index: 9999;
                margin-top: .3em;
            }
        </style>
