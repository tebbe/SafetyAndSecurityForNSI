@model SafetyAndSecurityForNSI.Models.CriminalRecordEntry

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<script src="~/editor/ckeditor.js"></script>
<h4 class="text-center">Criminal Record Entry</h4>
<hr />

<div class="row">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="col-md-12" id="CrimeReportEntry">
        <div class="col-md-6">
            <div class="form-group">
                @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Citizen Type", htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-7">
                    <select id="CitizenType" name="CitizenType">
                        <option>...Select Citizen Type...</option>
                        <option value="1">BD Citizen</option>
                        <option value="2">Foreign Citizen</option>
                    </select>
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Crime Status", htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-7">
                    @Html.DropDownListFor(model => model.Status, new SelectList(ViewBag.CrimeStatus, "StatusName", "StatusName"), ".....Select Type.....", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.Label("Gender", htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-7">
                    @Html.DropDownListFor(model => model.Gender, new SelectList(ViewBag.GenderList, "Sex", "Sex"), ".....Select Gender.....", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Crime Type", htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.CrimeType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CrimeType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Age", htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>

    <div class="col-md-12" id="LocalCitizen" style="display:none;">
        <div class="form-group">
            @Html.Label("NID", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Nid, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Birth Id", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.BirthId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Parents NID", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.ParentsNid, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ParentsNid, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="col-md-12" id="ForeignCitizen" style="display:none;">
        <div class="form-group">
            @Html.Label("Passport No", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.PassportNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PassportNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("SSN", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.SSN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SSN, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
 
    <div class="col-md-12">
        <h4 class="text-center">Crime Details</h4>
        <div class="text-center">
            @Html.TextAreaFor(model => model.CrimeDetails, new { htmlAttributes = new { @class = "form-control pull-left" } })
            @Html.ValidationMessageFor(model => model.CrimeDetails, "", new { @class = "text-danger" })
        </div> 
    </div>

     <div class="col-md-12">
         <div class="form-group">
             <div class="col-md-offset-5 col-md-7">
                 <input type="button" value="Save" id="crimeSave" class="btn btn-primary" />
                 <input type="button" value="Refresh" id="btnRefresh" class="btn btn-warning" />
             </div>
         </div>
     </div>       
</div>

<div style="margin-bottom:50px;">
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    $(document).ready(function () {
       
    });
    var editor = CKEDITOR.replace("CrimeDetails");

    $("#btnRefresh").click(function () {
        location.reload();
    });
    var crimeReportEntry = $("#CrimeReportEntry").kendoValidator({
        rules: {
            Name: function (input) {
                if (input.is("[name=Name]") && $("#Name").val() === "") {
                    return false;
                } else {
                    return true;
                }
            },
            CitizenType: function (select) {
                if (select.is("[name=CitizenType]") && $("#CitizenType").prop('selectedIndex') === 0) {
                    $("#ForeignCitizen").hide();
                    $("#LocalCitizen").hide();
                    return false;
                } else {
                    if ($("#CitizenType").prop('selectedIndex') === 1) {
                        $("#ForeignCitizen").hide();
                        $("#LocalCitizen").show();
                    } else if ($("#CitizenType").prop('selectedIndex') === 2) {
                        $("#LocalCitizen").hide();
                        $("#ForeignCitizen").show();
                        
                    }
                    return true;
                }
            },
            Nid: function (input) {
                if (input.is("[name=Nid]") && $("#Nid").val() === "") {
                    return false;
                } else {
                    return true;
                }
            },
            BirthId: function (input) {
                if (input.is("[name=BirthId]") && $("#BirthId").val() === "") {
                    return false;
                } else {
                    return true;
                }
            },
            ParentsNid: function (input) {
                if (input.is("[name=ParentsNid]") && $("#ParentsNid").val() === "") {
                    return false;
                } else {
                    return true;
                }
            },
            CrimeType: function (input) {
                if (input.is("[name=CrimeType]") && $("#CrimeType").val() === "") {
                    return false;
                } else {
                    return true;
                }
            },         
            Age: function (input) {
                if (input.is("[name=Age]") && $("#Age").val() === "") {
                    return false;
                } else {
                    return true;
                }
            },
            Gender: function (select) {
                if (select.is("[name=Gender]") && $("#Gender").val() === "") {
                    return false;
                } else {
                    return true;
                }
            },
            Status: function (select) {
                if (select.is("[name=Status]") && $("#Status").prop('selectedIndex') ===0) {
                    return false;
                } else {
                    return true;
                }
            },
        },
        messages: {          
            Name: "*",
            CitizenType:"Please Select Citizen Type",
            Nid: "*",
            BirthId: "*",
            ParentsNid: "*",
            CrimeType: "*",
            Age: "*",
            Gender: "*",
            Status: "*"          
        }
    }).data("kendoValidator");

    $("#crimeSave").click(function () {
        if (crimeReportEntry.validate() && CKEDITOR.instances['CrimeDetails'].getData() != "") {
            var sendData = new FormData();
            sendData.append("Name", $("#Name").val());
            sendData.append("Nid", $("#Nid").val());
            sendData.append("BirthId", $("#BirthId").val());
            sendData.append("ParentsNid", $("#ParentsNid").val());
            sendData.append("CrimeType", $("#CrimeType").val());
            sendData.append("CrimeDetails", CKEDITOR.instances['CrimeDetails'].getData());
            sendData.append("Age", $("#Age").val());
            sendData.append("Gender", $("#Gender").val());
            sendData.append("Status", $("#Status").val());
            
            $.ajax({
                url: '@Url.Action("CrimeReportSave", "CriminalRecordEntries")',
                type: 'Post',
                data: sendData,
                contentType: false,
                processData: false,
                success: function (data) {
                    //notification.hide(); notification.setOptions({ autoHideAfter: 5000 });
                    if (data === "Error") {
                        alert("Failed");
                        //notification.show("Adding new citizen was unsuccessful.", "upload-error");

                    } else {
                        //notification.show( "Local Citizen info has been successfully added.", "upload-success");
                        alert("Success");
                    }
                },
                error: function (error) {
                    //notification.hide(); notification.setOptions({ autoHideAfter: 5000 });
                    // notification.show("Upload unsuccessful", "upload-warning");
                    alert("Upload Failed");
                }
            });
        }

    });
</script>