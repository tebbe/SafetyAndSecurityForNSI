@model SafetyAndSecurityForNSI.Models.GovernmentJob
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<script src="~/editor/ckeditor.js"></script>

@Html.HiddenFor(model=>model.JobId)
<div class="form-horizontal" id="DivForJobUpdateValidation">
    <h4 class="text-center">Government Job</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("Department Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DepartmentName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Job Title", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.Label("Job Details", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="Update" onclick="UpdateGovtJob()" class="btn btn-default" />
        </div>
    </div>
</div>

<div style="margin-bottom:50px;">
    @Html.ActionLink("Back to List", "Index")
</div>
<script>

    CKEDITOR.plugins.addExternal('docprops', "docprops/plugin.js");
    var editor = CKEDITOR.replace('Body', {
        fullPage: true,
        extraPlugins: 'docprops',
        allowedContent: true,
        height: 320
    });

    var jobValidation = $("#DivForJobUpdateValidation").kendoValidator({
        rules: {
            Department: function (input) {
                if (input.is("[name=DepartmentName]") && $("#DepartmentName").val() === "") {
                    return false;
                } else {
                    return true;
                }
            },
            Title: function (input) {
                if (input.is("[name=JobTitle]") && $("#JobTitle").val() === "") {
                    return false;
                } else {
                    return true;
                }
            },
              },
        messages: {
            Department: "*",
            Title:"*"
        }
    }).data("kendoValidator");

function UpdateGovtJob() {
    if (jobValidation.validate()) {
        var sendData = new FormData();
        sendData.append("JobId", $("#JobId").val());
            sendData.append("DepartmentName", $("#DepartmentName").val());
            sendData.append("JobTitle", $("#JobTitle").val());
            sendData.append("Body", CKEDITOR.instances['Body'].getData());

            $.ajax({
                url: '@Url.Action("UpdateJobEntry", "GovernmentJob")',
                type: 'Post',
                data: sendData,
                contentType: false,
                processData: false,
                success: function (data) {
                    //notification.hide(); notification.setOptions({ autoHideAfter: 5000 });
                    if (data === "Error") {
                        alert("Failed");
                       //notification.show("Adding new citizen was unsuccessful.", "upload-error");

                    } else {
                        //notification.show( "Local Citizen info has been successfully added.", "upload-success");
                        location.href = "/GovernmentJob/Index";

                    }
                },
                error: function (error) {
                    //notification.hide(); notification.setOptions({ autoHideAfter: 5000 });
                   // notification.show("Upload unsuccessful", "upload-warning");
                    alert("Upload Failed");
                }
            });
        }
    }
</script>

